# load packages
library(tidyverse)
library(sf)
library(janitor)
# read in data
chicago_neighborhood_data <- st_read("data/Boundaries - Community Areas (current)/geo_export_fe5d6c58-e038-4e15-a576-3046bf1aba11.shp") %>%
clean_names()
install.packages("shinydashboard")
library(shiny)
library(tidyverse)
runApp('app')
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
"Hello, world!"
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
source("~/.active-rstudio-document", echo=TRUE)
runApp('app')
runApp()
source("~/.active-rstudio-document", echo=TRUE)
runApp()
server <- function() {
}
runApp()
ui <- navbarPage(
"Page title",
tabPanel("panel 1", "one"),
tabPanel("panel 2", "two"),
tabPanel("panel 3", "three"),
navbarMenu("subpanels",
tabPanel("panel 4a", "four-a"),
tabPanel("panel 4b", "four-b"),
tabPanel("panel 4c", "four-c")
)
) %>%
fluidPage(
fluidRow(
column(4),
column(6)
),
navlistPanel(
id = "tabset",
"Heading 1",
tabPanel("panel 1", "Panel one contents"),
"Heading 2",
tabPanel("panel 2", "Panel two contents"),
tabPanel("panel 3", "Panel three contents")
),
titlePanel("Central limit theorem"),
sidebarLayout(
sidebarPanel(
numericInput("m", "Number of samples:", 2, min = 1, max = 100)
),
mainPanel(
plotOutput("hist"),
tabsetPanel(
id = "tabset",
tabPanel("panel 1", "one"),
tabPanel("panel 2", "two"),
tabPanel("panel 3", "three")
)
),
navlistPanel(
id = "tabset",
"Heading 1",
tabPanel("panel 1", "Panel one contents"),
"Heading 2",
tabPanel("panel 2", "Panel two contents"),
tabPanel("panel 3", "Panel three contents")
)
install.packages(bslib)
install.packages("bslib")
runApp()
install.packages("thematic")
runApp()
runApp('app')
rstudioapi::viewer("http://127.0.0.1:4644")
source("~/Desktop/winter 2022/STAT 359/2022-352CensusTeam/bikeroutesandroads.R", echo=TRUE)
library(tidyverse)
library(rgdal)
library(broom)
bikeRouteData <- readOGR("vensus team data/Bike Routes/geo_export_5acdd40a-defd-4e38-bc51-9d35252ce617.shp")
bikeRouteData <- readOGR("census team data/Bike Routes/geo_export_5acdd40a-defd-4e38-bc51-9d35252ce617.shp")
bikeRouteDataFort <- tidy(bikeRouteData)
bikeRouteDataFort %>% ggplot(aes(x = long, y = lat, group = group)) +
geom_path(color = "green") +
theme_void()
roadsData <- readOGR("data/tl_2019_17_prisecroads/tl_2019_17_prisecroads.shp")
roadsData <- readOGR("census team data/tl_2019_17_prisecroads/tl_2019_17_prisecroads.shp")
roadsDataFort <- tidy(roadsData)
roadsDataChi <- roadsDataFort %>%
filter(long > -87.82, lat > 41.64, lat < 42.03)
roadsDataChi %>%
filter(piece == 1) %>%
ggplot(aes(x = long, y = lat, group = group)) +
geom_path(color = "red") +
theme_void()
runApp('app')
runApp()
runApp('app')
runApp()
runApp('app')
saveRDS(BikeRouteDataFort, "census team data/Bik Routes/BikeRouteDataFort.RDS")
bikeRouteData <- readOGR("census team data/Bike Routes/geo_export_5acdd40a-defd-4e38-bc51-9d35252ce617.shp")
bikeRouteDataFort <- tidy(bikeRouteData)
saveRDS(bikeRouteDataFort, "census team data/Bike Routes/bikeRouteDataFort.RDS")
bikeRouteData <- readOGR("census team data/Bike Routes/geo_export_5acdd40a-defd-4e38-bc51-9d35252ce617.shp")
bikeRouteDataFort <- tidy(bikeRouteData)
saveRDS(bikeRouteDataFort, "census team data/Bike Routes/bikeRouteDataFort.RDS")
write_rds(bikeRouteDataFort, "census team data/Bike Routes/bikeRouteDataFort.RDS")
write_rds(bikeRouteDataFort, "app/census team data/Bike Routes/bikeRouteDataFort.RDS")
write_rds(roadsDataChi, "app/census team data/Bike Routes/roadsDataChi.RDS")
read_rds("app/census team data/Bike Routes/bikeRouteDataFort.RDS")
read_rds("app/census team data/Bike Routes/roadsDataChi.RDS")
ui <-
navbarPage(
theme = bslib::bs_theme(bootswatch = "darkly"),
"Equiticity",
tabPanel("map", plotOutput("plot")),
tabPanel("demographics charts", "testing"),
tabPanel("panel 3", "three"),
navbarMenu("subpanels",
tabPanel("panel 4a", "four-a"),
tabPanel("panel 4b", "four-b"),
tabPanel("panel 4c", "four-c")
),
tabPanel("About", "TEXT")
) %>%
fluidPage(
navlistPanel(
id = "tabset",
"Heading 1",
tabPanel("panel 1", "Panel one contents"),
"Heading 2",
tabPanel("panel 2", "Panel two contents"),
tabPanel("panel 3", "Panel three contents")
),
titlePanel("Divvy stations in Chicago"),
sidebarLayout(
sidebarPanel(
numericInput("m", "Number of samples:", 2, min = 1, max = 100)
),
mainPanel(
plotOutput("hist"),
plotOutput("plot"),
tabsetPanel(
id = "tabset",
tabPanel("panel 1", "one"),
tabPanel("panel 2", "two"),
tabPanel("panel 3", "three")
)
runApp('app')

text_server <- function(id, df, vbl, threshhold) {
moduleServer(id, function(input, output, session) {
n <- reactive({sum(df()[[vbl]] > threshhold)})
output$text <- renderText({
paste("In this month",
vbl,
"exceeded the average daily threshhold of",
threshhold,
"a total of",
n(),
"days")
})
}
text_demo <- function() {
df <- data.frame(day = 1:30, arr_delay = 1:30)
ui <- fluidPage(text_ui("x"))
server <- function(input, output, session) {
text_server("x", reactive({df}), "arr_delay", 15)
}
shinyApp(ui, server)
}
# plot module ----
plot_ui <- function(id) {
fluidRow(
column(11, plotOutput(NS(id, "plot"))),
column( 1, downloadButton(NS(id, "dnld"), label = ""))
)
}
plot_server <- function(id, df, vbl, threshhold = NULL) {
moduleServer(id, function(input, output, session) {
plot <- reactive({viz_monthly(df(), vbl, threshhold)})
output$plot <- renderPlot({plot()})
output$dnld <- downloadHandler(
filename = function() {paste0(vbl, '.png')},
content = function(file) {ggsave(file, plot())}
)
})
}
plot_demo <- function() {
df <- data.frame(day = 1:30, arr_delay = 1:30)
ui <- fluidPage(plot_ui("x"))
server <- function(input, output, session) {
plot_server("x", reactive({df}), "arr_delay")
}
shinyApp(ui, server)
}
# metric module ----
metric_ui <- function(id) {
fluidRow(
text_ui(NS(id, "metric")),
plot_ui(NS(id, "metric"))
)
}
metric_server <- function(id, df, vbl, threshhold) {
moduleServer(id, function(input, output, session) {
text_server("metric", df, vbl, threshhold)
plot_server("metric", df, vbl, threshhold)
})
}
metric_demo <- function() {
df <- data.frame(day = 1:30, arr_delay = 1:30)
ui <- fluidPage(metric_ui("x"))
server <- function(input, output, session) {
metric_server("x", reactive({df}), "arr_delay", 15)
}
shinyApp(ui, server)
}
# load libraries ----
library(nycflights13)
library(shiny)
library(ggplot2)
library(dplyr)
# data prep ----
ua_data <-
nycflights13::flights %>%
filter(carrier == "UA") %>%
mutate(ind_arr_delay = (arr_delay > 5)) %>%
group_by(year, month, day) %>%
summarize(
n = n(),
across(ends_with("delay"), mean, na.rm = TRUE)
) %>%
ungroup()
# full application ----
ui <- fluidPage(
titlePanel("Flight Delay Report"),
sidebarLayout(
sidebarPanel = sidebarPanel(
selectInput("month", "Month",
choices = setNames(1:12, month.abb),
selected = 1
)
),
mainPanel = mainPanel(
h2(textOutput("title")),
h3("Average Departure Delay"),
metric_ui("dep_delay"),
h3("Average Arrival Delay"),
metric_ui("arr_delay"),
h3("Proportion Flights with >5 Min Arrival Delay"),
metric_ui("ind_arr_delay")
)
server <- function(input, output, session) {
output$title <- renderText({paste(month.abb[as.integer(input$month)], "Report")})
df_month <- reactive({filter(ua_data, month == input$month)})
metric_server("dep_delay", df_month, vbl = "dep_delay", threshhold = 10)
metric_server("arr_delay", df_month, vbl = "arr_delay", threshhold = 10)
metric_server("ind_arr_delay", df_month, vbl = "ind_arr_delay", threshhold = 0.5)
}
runApp('nycflights app.R')
text_demo(10)
text_demo()
neighborhood_map <- read_sf("neighborhoods/geo_export_9c969155-1ad2-4497-b263-d7a54abec1f1.shp")
runApp('sample app.R')
ui <- navbarPage(
"Sample app",
titlePanel("Flight Delay Report"),
sidebarLayout(
sidebarPanel = sidebarPanel(
selectInput("community_area", "Community area:",
choices = neighborhood_map$community_area,
selected = 1
)
),
mainPanel()
)
runApp('sample app.R')
read_csv("census_team_2015_2019_dat.csv")
census <- read_csv("census_team_2015_2019_dat.csv")
library(skimr)
census %>% skim_without_charts()
View(census)
View(crimes_census)
source("~/.active-rstudio-document", echo=TRUE)
census$geom[1]
install.packages("mapview")
library(mapview)
mapview:breweries
mapview::breweries
census %>%
ggplot() +
geom_sf()
ggplot(data = census) +
geom_sf()
census %>%
mutate(geometry = geom)
ggplot(data = census) +
geom_sf()
ggplot(data = census, aes(geom)) +
geom_sf()
# datasets I analyzed
crimes <- read_csv('data/violence_enforcement/crimes_2021.csv')
census <- read_excel('data/violence_enforcement/neighborhood_info.xlsx')
# adjusting census data so it can be joined
census <- census %>%
mutate(neighborhood = tolower(neighborhood)) %>%
rename(community = neighborhood)
# map data from Chicago Data Portal
communities <- read_sf('data/violence_enforcement/communities/geo_export_45d4da8d-3fc8-4ccb-9b0c-8f546d526c9a.shp')
bike_routes <- read_sf('data/violence_enforcement/bikes/geo_export_02f6b9aa-6d14-4951-9963-31aeaa95c2b8.shp')
# changing communities ID variable so I can join it with crimes
communities <- communities %>%
mutate(area_numbe = as.numeric(area_numbe))
# number of crimes per community area
crimes_count <- crimes %>%
group_by(community_area) %>%
summarise(num_crimes = n()) %>%
left_join(communities, by = c('community_area' = 'area_numbe'))
# proportion of crimes that are committed on/near a street (as indicated by the location being street, alley, sidewalk or highway) out of all crimes in the community
crimes_street <- crimes %>%
mutate(location_description = if_else(location_description %in% c('street', 'alley', 'sidewalk', 'highway / expressway'), "street", "non_street")) %>%
group_by(community_area, location_description) %>%
summarise(num_crimes = n()) %>%
pivot_wider(names_from = location_description, values_from = num_crimes) %>%
mutate(street_prop = street / (street + non_street)) %>%
left_join(communities, by = c('community_area' = 'area_numbe'))
# most frequent type of crime committed in each community area
crimes_type <- crimes %>%
group_by(community_area, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes)) %>%
left_join(communities, by = c('community_area' = 'area_numbe'))
# proportion arrested for their crime by community area
crimes_arrest <- crimes %>%
group_by(community_area) %>%
summarise(prop_arrest = mean(arrest)) %>%
left_join(communities, by = c('community_area' = 'area_numbe'))
crimes_type %>%
ggplot() +
geom_sf(mapping = aes(geometry = geometry, fill = primary_type)) +
geom_sf(data = bike_routes, mapping = aes(geometry = geometry)) +
theme_void()
library(mapview)
crimes_type %>%
ggplot() +
geom_sf(mapping = aes(geometry = geometry, fill = primary_type)) +
theme_void()
mapview(breweries)
breweries
crimes_type
View(crimes_type)
mapview(crimes_type)
?mapview()
View(crimes_type)
mapview(crimes_type, zcol = num_crimes)
view(bavaria)
mapview(bavaria)
view(breweries)
install.packages("tmap")
install.packages("map")
install.packages("spData")
library(tmap)
library(spData)
bavaria <- read_sf("bavaria.shp")
us_states_df
mapview(world)
world
tmap(world)
tm_shape(world)
tm_shape(world) + tm_borders()
tm_shape(world) + tm_borders() + tm_polygons(lifeExp)
tm_shape(world) + tm_borders() + tm_polygons(col = lifeExp)
tm_shape(world) + tm_borders() + tm_polygons(col = "lifeExp")
tm_shape(world) + tm_borders() + tm_polygons(col = "lifeExp", palette = "viridis")
source("~/.active-rstudio-document", echo=TRUE)
mapview(world, zcol = "lifeExp")
mapview(crimes_type, zcol = "num_crimes")
world <- world
View(communities)
mapview(communities)
crimes_type <- crimes %>%
group_by(community_area, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes)) %>%
left_join(communities, by = c('community_area' = 'area_numbe'))
mapview(crimes_type, zcol = "num_crimes")
communities %>%
right_join(communities, by = c('area_numbe' = 'community_area'))
communities %>%
right_join(crimes_type, by = c('area_numbe' = 'community_area'))
view(communities %>%
right_join(crimes_type, by = c('area_numbe' = 'community_area')))
crimes_type <- crimes %>%
group_by(community_area, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes)) %>%
left_join(communities, by = c('community_area' = 'area_numbe'))
crimes_type_x <- crimes %>%
group_by(community_area, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes))
View(crimes_type_x)
view(communities %>%
right_join(crimes_type_x, by = c('area_numbe' = 'community_area')))
type(communities %>%
right_join(crimes_type_x, by = c('area_numbe' = 'community_area')))
typeof(communities %>%
right_join(crimes_type_x, by = c('area_numbe' = 'community_area')))
test <- communities %>%
right_join(crimes_type_x, by = c('area_numbe' = 'community_area'))
mapview(test)
mapview(test, zcol = "num_crimes")
crimes_type_map <- communities %>%
right_join(crimes_type_x, by = c('area_numbe' = 'community_area'))
mapview(crimes_type_map, zcol = "num_crimes")
leaflet(crimes_type_map)
library(leaflet)
leaflet(crimes_type_map)
leaflet(crimes_type_map) %>% addTiles()
leaflet() %>%
addPolygons(crimes_type_map)
mapview(crimes_type_map, zcol = "num_crimes")
mapview(crimes_type_map, zcol = c("num_crimes"))
mapview(crimes_type_map, zcol = c("primary_type", "num_crimes"))
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("crime_type", "num_crimes"))))
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("crime_type", "num_crimes")))
libary(leaflet)
library(leafpop)
library(leaflet)
library(leafpop)
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("crime_type", "num_crimes")))
mapview(crimes_type_map,
popup = popupTable(crimes_type_map, zcol = c("crime_type", "num_crimes")))
mapview(crimes_type_map,
popup = popupTable(crimes_type_map, zcol = c("crime_type", "num_crimes")))
mapview::popupTable()
??popupTable
mapview(crimes_type_map, zcol = "num_crimes",
popup = leafpop::popupTable(crimes_type_map, zcol = c("crime_type", "num_crimes")))
View(crimes_type_map)
crimes_type_map
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("community", "crime_type", "num_crimes")))
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map)))
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map))
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(zcol = "num_crimes"))
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = "num_crimes"))
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("num_crimes")))
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("community", "num_crimes")))
View(communities)
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("community", "num_crimes")))
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("community", "num_crimes"))) %>%
addCircleMarkers()
communities <- read_sf('data/violence_enforcement/communities/geo_export_45d4da8d-3fc8-4ccb-9b0c-8f546d526c9a.shp')
crimes <- read_csv('data/violence_enforcement/crimes_2021.csv')
library(leaflet)
library(leafpop)
library(skimr)
library(mapview)
library(tmap)
library(spData)
library(tidyverse)
library(sf)
mapview(crimes_type_map, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("community", "num_crimes")))
communities$community
communities <- read_sf('data/violence_enforcement/communities/geo_export_45d4da8d-3fc8-4ccb-9b0c-8f546d526c9a.shp')
crimes <- read_csv('data/violence_enforcement/crimes_2021.csv')
communities$community
communities$community %>%
str_to_title()
communities %>%
mutate(community = community %>% str_to_title())
communities %>%
mutate(community = community %>% str_to_title()) %>%
order_by(area_numbe)
communities %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe)
View(communities)
communities %>%
mutate(area_numbe = as.numeric(area_numbe)) %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe)
communities %>%
mutate(area_numbe = as.numeric(area_numbe)) %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe) %>%
-select(area)
View(communities)
communities %>%
mutate(area_numbe = as.numeric(area_numbe)) %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe) %>%
-select(area_num_1)
communities %>%
mutate(area_numbe = as.numeric(area_numbe)) %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe) %>%
select(-area_num_1)
communities %>%
mutate(area_numbe = as.numeric(area_numbe)) %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe) %>%
select(-c(area, area_num_1, comarea, comarea_id, perimeter, shape_area, shape_len))
communities <- communities %>%
mutate(area_numbe = as.numeric(area_numbe)) %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe) %>%
select(-c(area, area_num_1, comarea, comarea_id, perimeter, shape_area, shape_len))
communities <- read_sf('data/violence_enforcement/communities/geo_export_45d4da8d-3fc8-4ccb-9b0c-8f546d526c9a.shp') %>%
mutate(area_numbe = as.numeric(area_numbe)) %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe) %>%
select(-c(area, area_num_1, comarea, comarea_id, perimeter, shape_area, shape_len))
communities
communities <- read_sf('data/violence_enforcement/communities/geo_export_45d4da8d-3fc8-4ccb-9b0c-8f546d526c9a.shp') %>%
mutate(community_id = as.numeric(area_numbe)) %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe) %>%
select(-c(area, area_num_1, comarea, comarea_id, perimeter, shape_area, shape_len))
communities
communities <- read_sf('data/violence_enforcement/communities/geo_export_45d4da8d-3fc8-4ccb-9b0c-8f546d526c9a.shp')
communities
communities <- read_sf('data/violence_enforcement/communities/geo_export_45d4da8d-3fc8-4ccb-9b0c-8f546d526c9a.shp') %>%
mutate(community_id = as.numeric(area_numbe)) %>%
mutate(community = community %>% str_to_title()) %>%
arrange(area_numbe) %>%
select(-c(area, area_num_1, area_numbe, comarea, comarea_id, perimeter, shape_area, shape_len)) %>%
select(community_id, community, geometry)
communities
communities <- read_sf('data/violence_enforcement/communities/geo_export_45d4da8d-3fc8-4ccb-9b0c-8f546d526c9a.shp') %>%
mutate(community = community %>% str_to_title()) %>%
mutate(community_id = as.numeric(area_numbe)) %>%
arrange(community_id) %>%
select(-c(area, area_num_1, area_numbe, comarea, comarea_id, perimeter, shape_area, shape_len)) %>%
select(community_id, community, geometry)
communities
crimes
crimes_type <- crimes %>%
group_by(community_area, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes))
crimes_type
crimes
View(crimes)
crimes %>%
group_by(community_area, primary_type) %>%
summarise(num_crimes = n())
view(crimes %>%
group_by(community_area, primary_type) %>%
summarise(num_crimes = n()))
crimes <- read_csv('data/violence_enforcement/crimes_2021.csv') %>%
mutate(community_id = community_area) %>%
select(-community_area) %>%
select(community_id, .)
read_csv('data/violence_enforcement/crimes_2021.csv') %>%
mutate(community_id = community_area) %>%
select(-community_area)
crimes <- read_csv('data/violence_enforcement/crimes_2021.csv') %>%
mutate(community_id = community_area) %>%
select(-community_area) %>%
select(community_id, everything())
crimes
crimes <- read_csv('data/violence_enforcement/crimes_2021.csv') %>%
mutate(community_id = community_area) %>%
select(-community_area) %>%
select(community_id, everything()) %>%
arrange(community_id)
crimes
crimes <- read_csv('data/violence_enforcement/crimes_2021.csv') %>%
mutate(community_id = community_area) %>%
select(-community_area) %>%
select(community_id, everything())
crimes
crimes <- read_csv('data/violence_enforcement/crimes_2021.csv') %>%
mutate(community_id = community_area) %>%
select(-community_area) %>%
select(community_id, everything()) %>%
arrange(community_id)
crimes_type <- crimes %>%
group_by(community_id, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes)) %>%
right_join(crimes_type, by = c('community_id' = 'community_id')) %>%
select(-community_id.y)
crimes
crimes %>%
group_by(community_id, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes)) %>%
right_join(crimes_type, by = c('community_id' = 'community_id'))
crimes %>%
group_by(community_id, primary_type)
crimes %>%
group_by(community_id, primary_type) %>%
summarise(num_crimes = n())
crimes %>%
group_by(community_id, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes))
crimes %>%
group_by(community_id, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes)) %>%
right_join(by = c('community_id' = 'community_id'))
crimes %>%
group_by(community_id, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes)) %>%
right_join(communities, by = c('community_id' = 'community_id'))
crimes %>%
group_by(community_id, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes)) %>%
right_join(communities, by = c('community_id' = 'community_id')) %>%
select(community_id, community, everything())
crimes_type <- crimes %>%
group_by(community_id, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes)) %>%
right_join(communities, by = c('community_id' = 'community_id')) %>%
select(community_id, community, everything())
mapview(crimes_type, zcol = "num_crimes",
popup = popupTable(crimes_type_map, zcol = c("community", "num_crimes")))
mapview(crimes_type, zcol = "num_crimes",
popup = popupTable(crimes_type, zcol = c("community", "num_crimes")))
crimes_type <- crimes %>%
group_by(community_id, primary_type) %>%
summarise(num_crimes = n()) %>%
filter(num_crimes == max(num_crimes))
communities %>%
right_join(crimes_type, by = c('community_id' = 'community_id')) %>%
select(community_id, community, everything())
communities %>%
right_join(crimes_type, by = c('community_id' = 'community_id')) %>%
select(community_id, community, primary_type, num_crimes, geometry)
crimes_type <- communities %>%
right_join(crimes_type, by = c('community_id' = 'community_id')) %>%
select(community_id, community, primary_type, num_crimes, geometry)
mapview(crimes_type, zcol = "num_crimes",
popup = popupTable(crimes_type, zcol = c("community", "num_crimes")))
mapview(crimes_type, zcol = "num_crimes")
# Load packages here!
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(dplyr)
tidymodels_prefer()
# Set seed here!
set.seed(3012)
